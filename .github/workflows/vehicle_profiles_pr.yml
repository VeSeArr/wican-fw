name: PR Workflow for Vehicle Profiles

permissions:
  contents: read
  pull-requests: write
  issues: write

on:
  pull_request:
    paths:
      - 'vehicle_profiles/**'
      - '.vehicle_profiles/**'

jobs:
  vehicle-profiles-check:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .vehicle_profiles
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: '.vehicle_profiles/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Validate vehicle profiles
        run: npm run validate

      - name: Merge and format vehicle profiles
        if: success()
        run: |
          npm run build
          npx prettier ../vehicle_profiles.json --write

      - name: Validate merge output
        run: |
          if [ ! -f ../vehicle_profiles.json ]; then
            echo "Error: vehicle_profiles.json was not created"
            exit 1
          fi
          echo "Generated file size: $(wc -c < ../vehicle_profiles.json) bytes"

      - name: Upload merged vehicle profiles
        id: upload
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: vehicle_profiles.json
          path: ${{ github.workspace }}/vehicle_profiles.json # Relative to the working-directory

      - name: Create Comment
        if: success()
        env:
          link: '${{steps.upload.outputs.artifact-url}}'
        run: |
          # Use GitHub API to create a comment on the PR
          PR_NUMBER=${{ github.event.pull_request.number }}
          COMMENT=`âœ… Vehicle profiles merged successfully!\n\nPlease download and test the updated [vehicle_profiles.json](${process.env.link}).`;
          GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          COMMENT_URL="https://api.github.com/repos/${{ github.repository }}/issues/${PR_NUMBER}/comments"
      
          curl -s -H "Authorization: token ${GITHUB_TOKEN}" -X POST $COMMENT_URL -d "{\"body\":\"$COMMENT\"}"
